<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:test-suite start="1613421282354" stop="1613421312537" version="1.5.4" xmlns:ns2="urn:model.allure.qatools.yandex.ru">
    <name>Default suite : Default test</name>
    <title>Default suite : Default test</title>
    <test-cases>
        <test-case start="1613421306193" stop="1613421312220" status="passed">
            <name>TC_02_Providercredentials_frommail</name>
            <description type="text">Reading Provider crentials from mail</description>
            <steps/>
            <attachments/>
            <labels>
                <label name="testSuite" value="Default suite"/>
                <label name="testGroup" value="Default test"/>
                <label name="testClass" value="com.sailotech.ezscheduler.Testpages.ProviderCredentialsfromMailTest"/>
                <label name="testMethod" value="TC_02_Providercredentials_frommail"/>
                <label name="severity" value="normal"/>
                <label name="testId" value="TC_02"/>
                <label name="host" value="DESKTOP-A4GJKOM"/>
                <label name="thread" value="19304@DESKTOP-A4GJKOM.main(1)"/>
            </labels>
        </test-case>
        <test-case start="1613421312481" stop="1613421312485" status="broken">
            <name>stopRecording</name>
            <description>@AfterTest</description>
            <failure>
                <message>Error: Unresolved compilation problem: 
	screenRecord cannot be resolved
</message>
                <stack-trace>java.lang.Error: Unresolved compilation problem: 
	screenRecord cannot be resolved
&#13;
	at com.sailotech.ezscheduler.Testpages.ProviderCredentialsfromMailTest.stopRecording(ProviderCredentialsfromMailTest.java:27)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)&#13;
	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)&#13;
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)&#13;
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)&#13;
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)&#13;
	at org.testng.TestRunner.afterRun(TestRunner.java:725)&#13;
	at org.testng.TestRunner.run(TestRunner.java:509)&#13;
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)&#13;
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)&#13;
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)&#13;
	at org.testng.SuiteRunner.run(SuiteRunner.java:364)&#13;
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)&#13;
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)&#13;
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)&#13;
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)&#13;
	at org.testng.TestNG.runSuites(TestNG.java:1049)&#13;
	at org.testng.TestNG.run(TestNG.java:1017)&#13;
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)&#13;
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)&#13;
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)&#13;
</stack-trace>
            </failure>
            <steps/>
            <attachments/>
            <labels>
                <label name="host" value="DESKTOP-A4GJKOM"/>
                <label name="thread" value="19304@DESKTOP-A4GJKOM.main(1)"/>
            </labels>
        </test-case>
    </test-cases>
    <labels>
        <label name="framework" value="TestNG"/>
        <label name="language" value="JAVA"/>
    </labels>
</ns2:test-suite>
